#!/bin/bash
# qc_exome_UKBB 0.0.1
# Generated by dx-app-wizard.
#
# Basic execution pattern: Your app will run on a single machine from
# beginning to end.
#
# Your job's input variables (if any) will be loaded as environment
# variables before this script runs.  Any array inputs will be loaded
# as bash arrays.
#
# Any code outside of main() (or any entry point you may add) is
# ALWAYS executed, followed by running the entry point itself.
#
# See https://documentation.dnanexus.com/developer for tutorials on how
# to modify this file.

main() {

    set -ex -o pipefail
    echo "Value of bam: '$cram'"
    echo "Value of reference: '$reference'"
    echo "Value of reference_index: '$reference_index'"
    echo "${cram_prefix}"
    
    my_python=$(which python3)
    echo $my_python
    
    dx-download-all-inputs --parallel
    mv $reference_index_path $(dirname $reference_path)
    mv $crai_path $(dirname $cram_path)
    eid_nameroot=$(echo $cram_name | cut -d'.' -f1)
    echo $variant

    # ls $(dirname $reference_path)
    # ls /usr/local/bin/

    /usr/local/bin/detectComplex.py VariantCount -v $variant -b $cram_path -r $reference_path
    /usr/local/bin/detectComplex.py ReadsToBAM -v $variant -b $cram_path -r $reference_path -o $eid_nameroot.subset.bam
    /usr/bin/samtools index $eid_nameroot.subset.bam

    bai_out=$(dx upload $eid_nameroot.subset.bam.bai --brief)
    bam_out=$(dx upload $eid_nameroot.subset.bam --brief)
   
    dx-jobutil-add-output bam_out "$bam_out" --class=file
    dx-jobutil-add-output bai_out "$bai_out" --class=file

    
    
    
    
    

}
